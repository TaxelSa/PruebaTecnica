@page "/"
@using Microsoft.EntityFrameworkCore;
@using PruebaTec.Models
@inject PruebaTecContext _context

<h3 class="text-xl font-bold mb-4">Lista de Estudiantes</h3>

@if (isLoading)
{
    <div class="skeleton-table">
        @for (int i = 0; i < 5; i++)
        {
            <div class="skeleton-row"></div>
        }
    </div>
}
else if (estudiantes is not null && estudiantes.Any())
{
    <table class="table table-bordered table-striped w-full">
        <thead class="bg-gray-100">
            <tr>
                <th>ID</th>
                <th>Nombre Completo</th>
                <th>CURP</th>
                <th>Correo</th>
                <th>Teléfono</th>
                <th>Sexo</th>
                <th>Modalidad</th>
                <th>Es Becado</th>
                <th>Carrera</th>
                <th>Acciones</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var e in estudiantes)
            {
                <tr Key="@e.Id">
                    <td>@e.Id</td>
                    <td>@e.Nombres @e.Apellidos</td>
                    <td>@e.CURP</td>
                    <td>@e.Email</td>
                    <td>@e.Telefono</td>
                    <td>@e.Sexo</td>
                    <td>@e.Modalidad</td>
                    <td>@(e.EsBecado ? "Sí" : "No")</td>
                    <td>@e.Carrera?.NombreCarrera</td>
                    <td>
<a class="btn btn-primary" href="@($"/estudiante/{e.Id}")">Ver detalles</a>

                    </td>
                    
                </tr>
            }
        </tbody>
    </table>
} 
else
{
    <p>No hay estudiantes registrados.</p>
}

@code {
    private List<Estudiante>? estudiantes;
    private bool isLoading = true;

    [Inject]
    public NavigationManager NavigationManager { get; set; } = default!;

    protected override async Task OnInitializedAsync()
    {
        try
        {
            await Task.Delay(500); // Simula carga
            estudiantes = await _context.Estudiantes.Include(e => e.Carrera).ToListAsync();
        }
        catch (Exception ex)
        {
            Console.WriteLine($"Error cargando estudiantes: {ex.Message}");
        }
        finally
        {
            isLoading = false;
        }
    }
    private void VerDetalles(int id)
    {
        Console.WriteLine($"Clic en Ver Detalles, ID: {id}");

        NavigationManager.NavigateTo($"/estudiante/{id}");
    }
}
